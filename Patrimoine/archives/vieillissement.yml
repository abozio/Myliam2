# second entity, links, link methods, init, procedures, local variables,
# dump's suffix argument, choice
entities:
    menage:
        fields:
            # period and id are implicit
            - nb_persons:  {type: int, initialdata: false}
            - nb_children: {type: int, initialdata: false}
            - region_id:   {type: int, initialdata: false}
            
        links:
            persons: {type: one2many, target: person, field: res}
            
        processes:
            init_region_id:
                - region_id: choice([0, 1, 2, 3], [0.1, 0.2, 0.3, 0.4])

            household_composition:
                - nb_persons: countlink(persons)
                - nb_children: countlink(persons, age < 18)
                
    person:
        fields:
            - age:    int
            - sexe:   int
            - agegroup: {type: int, initialdata: false}
            - res:    int
            - pere:   int
            - mere:   int
            - conjoint: int
         
        links:
            household: {type: many2one, target: menage, field: res}
            mere: {type: many2one, target: menage, field: mere}
            pere: {type: many2one, target: menage, field: pere}
            conjoint: {type: one2one, target: menage, field: conjoint}
        # possible transitions and regressions. The actual list used in the
        # simulation must be defined below
        processes:
            ageing:
                - age: age + 1
                - agegroup: if(age < 50,
                               5 * trunc(age / 5),
                               10 * trunc(age / 10))

            birth:
                - to_give_birth: logit_regr(0.0,
                                            filter=(sexe==2) and (age >= 15) and (age <= 50),
                                            align='al_p_birth.csv')
                - new('person', filter=to_give_birth,
                      mere = id,
                      res = res,
                      age = 0,
                      conjoint = 0,
                      civilstate = SINGLE)
                #      sexe = choice(['1','2], [0.51, 0.49])
                    

   

simulation:
    init: 
        - menage: [init_region_id]
    processes:
        #- person: [age, agegroup, dump_info, show_demography]
        - person: [age]
        - menage: [household_composition]

    input:
        file: simple2009.h5
    output:
        file: simulTest.h5

    # first simulated period
    start_period: 2009
    periods: 5