while (j<(10+1) & i<(nrow(Tind)+1)) {
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print taille.men
if (Tdidier[j,2] == Tind$anais[i]) {
identmen[j] = Tind$identmen[i]
i = i+1
}
else { j=j+taille.men}
}
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(10+1) & i<(nrow(Tind)+1)) {
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
identmen[j] = Tind$identmen[i]
i = i+1
}
else { j=j+taille.men}
}
fix(identmen)
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(10+1) & i<(nrow(Tind)+1)) {
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (Tdidier[j:(j+taille.men),2] == Tind$anais[i:(i+taille.men)]) {
identmen[j:(j+taille.men)] = Tind$identmen[i:(i+taille.men)]
i = i++taille.men
j=j+taille.men
}
}
else { j=j+taille.men}
}
View(Tdidier)
View(Tind)
fix(identmen)
identmen = numeric( nrow(Tdidier))
while (j<(nrow(Tdidier)+1) & i<(nrow(Tind)+1)) {
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (Tdidier[j:(j+taille.men),2] == Tind$anais[i:(i+taille.men)]) {
identmen[j:(j+taille.men)] = Tind$identmen[i:(i+taille.men)]
i = i++taille.men
j=j+taille.men
}
}
else { j=j+taille.men}
}
fix(identmen)
warnings
warnings()
?equal
??equal
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(nrow(Tdidier)+1) & i<(nrow(Tind)+1)) {
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men),2] ,Tind$anais[i:(i+taille.men)])) {
identmen[j:(j+taille.men)] = Tind$identmen[i:(i+taille.men)]
i = i++taille.men
j=j+taille.men
}
}
else { j=j+taille.men}
}
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<10+1) & i<(nrow(Tind)+1)) {
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men),2] ,Tind$anais[i:(i+taille.men)])) {
identmen[j:(j+taille.men)] = Tind$identmen[i:(i+taille.men)]
i = i++taille.men
j=j+taille.men
}
}
else { j=j+taille.men}
}
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(10+1) & i<(nrow(Tind)+1)) {
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men),2] ,Tind$anais[i:(i+taille.men)])) {
identmen[j:(j+taille.men)] = Tind$identmen[i:(i+taille.men)]
i = i++taille.men
j=j+taille.men
}
}
else { j=j+taille.men}
}
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(10+1) & i<(nrow(Tind)+1)) {
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men),2] ,Tind$anais[i:(i+taille.men)])) {
identmen[j:(j+taille.men)] = Tind$identmen[i:(i+taille.men)]
i = i++taille.men
j=j+taille.men
}
else j=j+1
}
else { j=j+taille.men}
}
fix(identmen)
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(100+1) & i<(nrow(Tind)+1)) {
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men),2] ,Tind$anais[i:(i+taille.men)])) {
identmen[j:(j+taille.men)] = Tind$identmen[i:(i+taille.men)]
i = i++taille.men
j=j+taille.men
}
else j=j+1
}
else { j=j+taille.men}
}
fix(identmen)
fix(identmen)
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(100+1) & i<(nrow(Tind)+1)) {
print( paste(i,j))
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men),2] ,Tind$anais[i:(i+taille.men)])) {
identmen[j:(j+taille.men)] = Tind$identmen[i:(i+taille.men)]
i = i++taille.men
j=j+taille.men
}
else j=j+1
}
else { j=j+taille.men}
}
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(100+1) & i<(nrow(Tind)+1)) {
print( paste(i,j))
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men),2] ,Tind$anais[i:(i+taille.men)])) {
identmen[j:(j+taille.men)] = Tind$identmen[i:(i+taille.men)]
i = i++taille.men
j=j+taille.men
}
else j=j+1
}
else { j=j+taille.men}
}
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(100+1) & i<(nrow(Tind)+1)) {
print( paste(i,j))
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men),2] ,Tind$anais[i:(i+taille.men)])) {
identmen[j:(j+taille.men)] = Tind$identmen[i:(i+taille.men)]
i = i+taille.men
j=j+taille.men
}
else j=j+1
}
else { j=j+taille.men}
}
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(100+1) & i<(nrow(Tind)+1)) {
print( paste(i,j))
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men),2] ,Tind$anais[i:(i+taille.men)])) {
identmen[j:(j+taille.men)] = Tind$identmen[i:(i+taille.men)]
i = i+taille.men
j= j+taille.men
print("marche")
}
else {
j=j+1
print("pas loin")
}
}
else {
j=j+taille.men
print("marche pas")
}
}
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(100+1) & i<(nrow(Tind)+1)) {
print( paste(i,j))
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men-1),2] ,Tind$anais[i:(i+taille.men-1)])) {
identmen[j:(j+taille.men-1)] = Tind$identmen[i:(i+taille.men-1)]
i = i+taille.men
j= j+taille.men
print("marche")
}
else {
j=j+1
print("pas loin")
}
}
else {
j=j+taille.men
print("marche pas")
}
}
fix(identmen)
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(100+1) & i<(nrow(Tind)+1)) {
print( paste(i,j))
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men-1),2] ,Tind$anais[i:(i+taille.men-1)])) {
identmen[j:(j+taille.men-1)] = Tind$identmen[i:(i+taille.men-1)]
i = i+taille.men
j= j+taille.men
print("marche")
}
else {
j=j+1
print("pas loin")
}
}
else {
j=j+1
print("marche pas")
}
}
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(100+1) & i<(nrow(Tind)+1)) {
print( paste(j,i))
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men-1),2] ,Tind$anais[i:(i+taille.men-1)])) {
identmen[j:(j+taille.men-1)] = Tind$identmen[i:(i+taille.men-1)]
i = i+taille.men
j= j+taille.men
print("marche")
}
else {
j=j+1
print("pas loin")
}
}
else {
j=j+1
print("marche pas")
}
}
fix(identmen)
i=1
j=1
identmen = numeric( nrow(Tdidier))
while (j<(100+1) & i<(nrow(Tind)+1)) {
print( paste(j,i))
taille.men = length( which(Tind$identmen[] == Tind$identmen[i])  )
print(taille.men)
if (Tdidier[j,2] == Tind$anais[i]) {
if (identical(Tdidier[j:(j+taille.men-1),2] ,Tind$anais[i:(i+taille.men-1)])) {
identmen[j:(j+taille.men-1)] = Tind$identmen[i:(i+taille.men-1)]
i = i+taille.men
j= j+taille.men
print("marche")
}
else {
j=j+1
print("pas loin")
}
}
else {
i=i+1
print("marche pas")
}
}
View(Tdidier)
View(person2009)
identmen = numeric(nrow(person2009))
affect=0
View(person2009)
View(conjoint)
for (i in 1:nrow(person2009)) {
residence[i,t_deb]<-i
#conjoint
residence[which(conjoint[,t_deb]>i ),t_deb]<-residence[conjoint[which(conjoint[,t_deb]>i),t_deb],t_deb]
}
#enfant de moins de 27 ans avec leur mere sauf pour les couples ou quand la mere est hors champ.
residence[which(mere>0 & conjoint[,t_deb]<0 & age <25),t_deb]<-residence[mere[which(mere>0 & conjoint[,t_deb]<0  & age <27)],t_deb]
res <- numeric(nrow(person2009))
View(person2009)
conjoint <- person2009[,"conjoint]
conjoint <- person2009[,"conjoint"]
for (i in 1:nrow(person2009)) {
res[i]<-i
#conjoint
res[which(conjoint>i ),t_deb]<-res[conjoint[which(conjoint>i),t_deb],t_deb]
}
#enf
for (i in 1:nrow(person2009)) {
res[i]<-i
#conjoint
res[which(conjoint>i )]<-res[conjoint[which(conjoint>i)]]
}
res[which(mere>0 & conjoint<0 & age <25)]<-res[mere[which(mere>0 & conjoint<0  & age <27)]]
View(person2009)
mere     <- person2009[,"mere"]
res[which(mere>0 & conjoint<0 & age <25)]<-res[mere[which(mere>0 & conjoint<0  & age <27)]]
attach(person2009)
attach(person2009)
res[which(mere>0 & conjoint<0 & age <25)]<-res[mere[which(mere>0 & conjoint<0  & age <27)]]
res[which(mere>0 & conjoint<0 & age <25)]<-res[mere[which(mere>0 & conjoint<0  & age <25)]]
fix(res)
res <- numeric(nrow(person2009))
for (i in 1:nrow(person2009)) {
res[i]<-i
#conjoint
res[which(conjoint>i )]<-res[conjoint[which(conjoint>i)]]
}
fix(res)
for (i in 1:nrow(person2009)) {
res[i]<-i
#conjoint
res[which(conjoint>i )]->res[conjoint[which(conjoint>i)]]
}
fix(res)
fix(conjoint)
for (i in 1:nrow(person2009)) {
res[i]<-i
#conjoint
res[which(conjoint<i )] <-res[conjoint[which(conjoint<i)]]
}
rm(conjoint,mere)
res <- numeric(nrow(person2009))
attach(person2009)
for (i in 1:nrow(person2009)) {
res[i]<-i
#conjoint
res[which(conjoint<i )] <-res[conjoint[which(conjoint<i)]]
}
which(conjoint<i )
res <- numeric(nrow(person2009))
attach(person2009)
for (i in 1:nrow(person2009)) {
res[i]<-i
#conjoint
res[which(conjoint<i & conjoint >0 )] <-res[conjoint[which(conjoint<i  & conjoint >0)]]
}
fix(res)
res[which(mere>0 & conjoint<0 & age <25)]<-res[mere[which(mere>0 & conjoint<0  & age <25)]]
fix(res)
for (i in 1:nrow(person2009)) {
person2009$res[i]<-i
#conjoint
person2009$res[which(person2009$conjoint<i & person2009$conjoint >0 )] <-person2009$res[person2009$conjoint[which(person2009$conjoint<i  & person2009$conjoint >0)]]
}
###############  BIOS DESTINIE  ******************
# Extraction des biographie individuelle (liens familiaux, statuts, salaire) de la base de Destinie 2009.
# Programmes conjoint et statut dans P:\Retraites\Destinie\VersR
# source("P:/Retraites/PENSIPP 0.0/Mod√®le/Outils/OutilsRetraite/OutilsMS.R")
# source("P:/Retraites/PENSIPP 0.0/Mod√®le/Outils/OutilsRetraite/OutilsDestinie.R")
setwd("C:/Users/a.eidelman/Desktop/GenIPP_Pyth/liam/Patrimoine/data/")
debut        <- 1900
t_deb        <- 109
t_fin        <- 160
# Lecture donn√É¬©es d'√É¬©tat initial (NB : le tableau interm√É¬©diaire buf est lu sous forme de dataframe
# et imm√É¬©diatement converti en type matrix, ce qui est n√É¬©cessaire pour l'extraction de la
# sous-matrice des identifiants des enfants)
buf                          <- read.csv2("init/pop.csv",header=FALSE)
dimnames(buf)[[2]] <- c("id","period","age","sexe","findet","pere","mere","n_enf","enf1","enf2","enf3","enf4","enf5","enf6")
person_sta <- buf
person_sta[,2] <- rep.int(2009,n)
#on passe de la date de naissance √† l'age
person_sta[,3] <- 2009 - (1900+person_sta[,3])
write.table(person_sta,file="person_sta.csv",sep=",",row.names=F)
# Lecture carri√É¬®res et biographies matrimoniales
library(reshape)
buf                          <- read.csv2("init/biosta.csv",header=FALSE)
n                            <- nrow(buf)
print (c(n," individus lus dans BioSta.csv"))
# Decede quands plus de statut
buf[is.na(buf)]<- -3
###############  BIOS DESTINIE  ******************
# Extraction des biographie individuelle (liens familiaux, statuts, salaire) de la base de Destinie 2009.
# Programmes conjoint et statut dans P:\Retraites\Destinie\VersR
# source("P:/Retraites/PENSIPP 0.0/Mod√®le/Outils/OutilsRetraite/OutilsMS.R")
# source("P:/Retraites/PENSIPP 0.0/Mod√®le/Outils/OutilsRetraite/OutilsDestinie.R")
setwd("C:/Users/a.eidelman/Desktop/GenIPP_Pyth/liam/Patrimoine/data/")
debut        <- 1900
t_deb        <- 109
t_fin        <- 160
# Lecture donn√É¬©es d'√É¬©tat initial (NB : le tableau interm√É¬©diaire buf est lu sous forme de dataframe
# et imm√É¬©diatement converti en type matrix, ce qui est n√É¬©cessaire pour l'extraction de la
# sous-matrice des identifiants des enfants)
buf                          <- read.csv2("init/pop.csv",header=FALSE)
dimnames(buf)[[2]] <- c("id","period","age","sexe","findet","pere","mere","n_enf","enf1","enf2","enf3","enf4","enf5","enf6")
person_sta <- buf
n <- nrow(buf)
person_sta[,2] <- rep.int(2009,n)
#on passe de la date de naissance √† l'age
person_sta[,3] <- 2009 - (1900+person_sta[,3])
write.table(person_sta,file="person_sta.csv",sep=",",row.names=F)
# Lecture carri√É¬®res et biographies matrimoniales
library(reshape)
buf                          <- read.csv2("init/biosta.csv",header=FALSE)
n                            <- nrow(buf)
print (c(n," individus lus dans BioSta.csv"))
# Decede quands plus de statut
buf[is.na(buf)]<- -3
colnames(buf)<-c("id",seq(debut,debut+t_fin))
statut=melt(buf[,],id="id")
colnames(statut)[2:3] <- c("period","statut")
buf                          <- read.csv2("init/biosal4.csv",header=FALSE)
n                            <- nrow(buf)
print (c(n," individus lus dans BioSal4.csv"))
# =0 quands plus de statut
buf[is.na(buf)]<- 0
colnames(buf)<-c("id",seq(debut,debut+t_fin))
salaires=melt(buf[,],id="id")
colnames(salaires)[2:3] <- c("period","salaires")
buf                        <- read.csv2("init/biomat4.csv",header=FALSE)
n                          <- nrow(buf)
print (c(n," individus lus dans BioMat4.csv"))
buf[is.na(buf)]<- 0
colnames(buf)<-c("id",seq(debut,debut+t_fin))
conjoint=melt(buf[,],id="id")
colnames(conjoint)[2:3] <- c("period","conjoint")
person=cbind(conjoint,salaires,statut)[,c("id","period","conjoint","salaires","statut")]
write.csv(person,file="person.csv",row.names=F)
####### table 2009 ######
person2009 <- subset( person, period==2009)
person2009 <- merge( person2009,person_sta, by=c("id","period"),sort = F)
person2009 <- subset( person2009, age>0)
# on invente des m√©nages, √† l'instinct.
for (i in 1:nrow(person2009)) {
person2009$res[i]<-i
#conjoint
person2009$res[which(person2009$conjoint<i & person2009$conjoint >0 )] <-person2009$res[person2009$conjoint[which(person2009$conjoint<i  & person2009$conjoint >0)]]
}
for (i in 1:nrow(person2009)) {
person2009$res[i]<-i
#conjoint
}
seq(1:3)
person2009$res<-seq(1:nrow(person2009))
View(person2009)
which(person2009$conjoint<i & person2009$conjoint >0 )
person2009$res[which(person2009$conjoint> person2009$conjoint[person2009$conjoint] )]
person2009$res[which(person2009$conjoint> person2009$id  )] <- person2009$res[person2009$res[which(person2009$conjoint> person2009$id  )]]
View(person)
View(person2009)
person2009$res[which(person2009$conjoint> person2009$id  )] <- person2009$res[person2009$res[which(person2009$conjoint> person2009$id  )]]
which(person2009$conjoint> person2009$id  )
which(person2009$conjoint < person2009$id & person2009$conjoint >0 )
person2009$res[which(person2009$conjoint < person2009$id & person2009$conjoint >0 )] <- person2009$res[person2009$conjoint[[which(person2009$conjoint < person2009$id & person2009$conjoint >0 )]]]
person2009$res[which(person2009$conjoint < person2009$id & person2009$conjoint >0 )] <- person2009$res[person2009$conjoint[which(person2009$conjoint < person2009$id & person2009$conjoint >0 )]]
View(person2009)
person2009$res[which(mere>0 & person2009$conjoint<0 & age <25)]<-person2009$res[person2009$mere[which(person2009$mere>0 & person2009$conjoint<0  & person2009$age <25)]]
View(person2009)
write.csv(person2009,file="person2009.csv",row.names=F)
unique(person$res)
person$res
person2009$res
unique(person2009$res)
write.csv(unique(person2009$res),file="menage2009.csv",row.names=F)
men <- unique(person2009$res)
?rep
rep.int(3,10)
men <- cbind(men,rep.int(2009,nrow(men)))
nrow(men)
men <- as.matrix(unique(person2009$res))
nrow(men)
men <- cbind(men,rep.int(2009,nrow(men)))
View(men)
colnames(men) <- c("id","period")
write.csv(men,file="mena2009.csv",row.names=F)
write.csv(men,file="menage2009.csv",row.names=F)
