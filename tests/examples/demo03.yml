# This is a "simulation" file. To run the simulation, press F6 in liam2
# environment, or run the following command in a console:
# INSTALL PATH\liam2 run demo03.yml

# This example builds upon the previous ones and introduces the following
# additional features: macros, lifecycle functions (new and remove), logit_regr,
# aggregate functions (grpsum and grpavg) and the default_entity option. We use
# the features we have introduced so far to add very simple birth and death
# procedures to our model.
entities:
    household:
        fields:
            # period and id are implicit
            - nb_persons:  {type: int, initialdata: false}
            - nb_children: {type: int, initialdata: false}
            - region_id:   {type: int, initialdata: false}

        links:
            persons: {type: one2many, target: person, field: hh_id}

        processes:
            init_region_id:
                - region_id: choice([0, 1, 2, 3], [0.1, 0.2, 0.3, 0.4])

            household_composition:
                - nb_persons: countlink(persons)
                - nb_children: countlink(persons, age < 18)

            clean_empty: remove(nb_persons == 0)

    person:
        fields:
            # period and id are implicit
            - age:        int
            - gender:     bool

            # link fields
            - mother_id:  int
            - hh_id:      int

            # fields not present in input
            - agegroup: {type: int, initialdata: false}

        links:
            mother: {type: many2one, target: person, field: mother_id}
            children: {type: one2many, target: person, field: mother_id}
            household: {type: many2one, target: household, field: hh_id}

        macros:
            MALE: True
            FEMALE: False
            ISMALE: gender
            ISFEMALE: not gender

        # possible transitions and regressions. The actual list used in the
        # simulation must be defined below
        processes:
            ageing:
                - age: age + 1
                - agegroup: if(age < 50,
                               5 * trunc(age / 5),
                               10 * trunc(age / 10))

            birth:
                - to_give_birth: logit_regr(0.0,
                                            filter=ISFEMALE and (age >= 15) and (age <= 50),
                                            align='al_p_birth.csv')
                - new('person', filter=to_give_birth,
                      mother_id = id,
                      hh_id = hh_id,
                      age = 0,
                      gender = choice([MALE, FEMALE], [0.51, 0.49]))

            death:
                - dead: if(ISMALE,
                           logit_regr(0.0, align='al_p_dead_m.csv'),
                           logit_regr(0.0, align='al_p_dead_f.csv'))
                - show('Avg age of dead men', grpavg(age, filter=dead and ISMALE))
                - show('Avg age of dead women', grpavg(age, filter=dead and ISFEMALE))
                - remove(dead)

            dump_info: csv(dump(id, age, gender, hh_id, household.nb_persons,
                                mother.age), suffix='info')
            show_demography: show(groupby(agegroup, gender))

simulation:
    init:
        - household: [init_region_id]

    processes:
        - person: [ageing, birth, death, show_demography]
        - household: [household_composition, clean_empty]
#        - person: [dump_info, show_demography]

    input:
        file: simple2001.h5
    output:
        file: simulation.h5

    start_period: 2002
    periods: 2

    # at the end of the simulation, start the interactive console directly in
    # the "person" entity
    default_entity: person
